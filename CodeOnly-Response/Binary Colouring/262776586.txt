The code is buggy because it doesn't correctly convert binary representation of numbers to the Gray codes. Here's the correct version:

```Python
d = input().split()
t = int(d[0])
x_c = [int(d[i]) for i in range(1, t+1)]
res = []
for x in x_c:
    a = []
    while x != 0:
        if (x & 1):
            a.append(1 if len(a) % 2 == 0 else -1)
        else:
            a.append(1 if not a or a[-1] == -1 else 0)
        x >>= 1
    res.append(a)
for a in res:
    n = len(a)
    print(n)
    print(" ".join(map(str, a)))
```

This version uses bitwise operations to correctly generate the Gray codes. The line `if (x & 1)` checks if the least significant bit of `x` is 1 or 0, and then appends the corresponding value to the list `a`. If the length of `a` is odd, it means we've just appended a 1, so we append -1 next time. Otherwise, we append 0.