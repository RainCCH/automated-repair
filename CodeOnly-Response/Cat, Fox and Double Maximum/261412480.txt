I'd be happy to help you fix the code! After reviewing it, I found a few issues:

1. The `is_odd` variable is not being used correctly. It's assigned a value of 1 initially, but then it's overwritten with the result of `(num_list[i] == n)`, which will always be either 0 or 1. This means that the rest of the code will treat both odd and even indices as if they were even.
2. The `lst` and `lst_` lists are being created, but their contents are not being used anywhere in the code.
3. The `k` variable is being decremented by 1 in each iteration of the loops, which means that it will always be 0 by the time the code reaches the end of the function.

Here's a revised version of your code that addresses these issues:

```python
def sol(num_list):
    odd_indices = [i for i, x in enumerate(num_list) if x % 2 != 0]
    even_indices = [i for i, x in enumerate(num_list) if x % 2 == 0]

    lst = [(x, i) for i, x in enumerate(num_list) if i in odd_indices]
    lst_ = [(x, i) for i, x in enumerate(num_list) if i not in odd_indices]

    lst = sorted(lst, key=lambda x: x[0])
    lst_ = sorted(lst_, key=lambda x: x[0])

    k = len(num_list)
    for i, (x, _) in enumerate(lst):
        lst[i] = (x + k, _)
        k -= 1
    for i, (x, _) in enumerate(lst_):
        lst_[i] = (x + k, _)
        k -= 1

    joined_lst = lst + lst_
    joined_lst = sorted(joined_lst, key=lambda x: x[1])

    for i, (_, index) in enumerate(joined_lst):
        print(joined_lst[i][0] - num_list[index], end=' ')

def main():
    try:
        n_cases = int(input())
        for _ in range(n_cases):
            num = int(input())
            int_list = [int(x) for x in input().split()]
            sol(int_list)
    except ValueError:
        print("Invalid input")

if __name__ == "__main__":
    main()
```

This revised code should work correctly. It first creates two lists of indices, one for odd and one for even numbers. Then it creates `lst` and `lst_` as before, but uses the correct indices from the original list. The rest of the code is similar to your original code.