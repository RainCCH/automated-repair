The bug in the code is that it doesn't handle the case when `t` is less than 1. In Python, list indices start from 0, so if `t` is less than 1, then `d[0]` and all `d[i]` for `i in range(1,t+1)` will throw an `IndexError`.

Here's the fixed code:

```Python
try:
    d = input().split()
    t = int(d[0])
    x_c = [int(d[i]) for i in range(1, t + 1)]
    res = []
    for x in x_c:
        a = []
        while x != 0:
            if x % 2 == 0:
                a.append(0)
            else:
                a.append(1)
                x -= 1
                if x % 2 == 0:
                    a.append(0)
                else:
                    a.append(-1)
                    x += 1
            x //= 2
        res.append(a)
    for a in res:
        n = len(a)
        print(n)
        print(" ".join(map(str, a)))
except (IndexError, ValueError):
    print("Invalid input")
```

In this code, I've added a `try-except` block to catch any `IndexError` or `ValueError` that might occur during the execution of the code. If an error occurs, it will print "Invalid input" instead of crashing.